include(UseAsn1c)
set(ASN1C_GEN_DIR "${CMAKE_CURRENT_SOURCE_DIR}/gen")
file(GLOB ASN1_SOURCES *.asn1)

option(VANETZA_ASN1_NO_ASN1C "Use bundled ASN.1 code instead of code generated by asn1c" OFF)
if(NOT ${VANETZA_ASN1_NO_ASN1C})
    if(NOT ASN1C)
        message(SEND_ERROR "asn1c not found, cannot generate ASN.1 code from sources")
    endif()

    set(ASN1C_ARGS -fcompound-names -gen-PER -pdu=auto)
    if("${ASN1C_VERSION}" VERSION_LESS "0.9.26")
        # These options became default with 0.9.26
        list(APPEND ASN1C_ARGS -fnative-types -fskeletons-copy)
    endif()

    add_custom_command(
        OUTPUT ${ASN1C_GEN_DIR}/CAM.h ${ASN1C_GEN_DIR}/DENM.h
        COMMAND ${ASN1C} ${ASN1C_ARGS} ${ASN1_SOURCES}
        COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_SOURCE_DIR}/patch_asn1c.cmake
        DEPENDS ${ASN1C_SOURCES}
        WORKING_DIRECTORY ${ASN1C_GEN_DIR}
        VERBATIM)
else()
    message(STATUS "Using bundled ASN.1 code instead of asn1c")
endif()

add_custom_target(asn1_gen DEPENDS ${ASN1C_GEN_DIR}/CAM.h ${ASN1C_GEN_DIR}/DENM.h)

set(CXX_SOURCES asn1c_wrapper.cpp)
asn1c_sources(ASN1C_SOURCES ${ASN1C_GEN_DIR})
vanetza_module(asn1 ${CXX_SOURCES} ${ASN1C_SOURCES})
vanetza_module_property(asn1 INCLUDE_DIRECTORIES ${ASN1C_GEN_DIR})
vanetza_module_property(asn1 INTERFACE_INCLUDE_DIRECTORIES ${ASN1C_GEN_DIR})
vanetza_module_dependencies(asn1 asn1_gen)

# Silence warnings in code generated by asn1c
if (CMAKE_C_COMPILER_ID STREQUAL "Clang")
    vanetza_module_property(asn1 COMPILE_OPTIONS "-Wno-parentheses-equality")
endif()

add_test_subdirectory(tests)

